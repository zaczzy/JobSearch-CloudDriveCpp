Edit notes by Zach:
This repo solely exists to provide code access to potential employers. It's the second systems project I referenced in my resume.

ORIGINAL README:
Team 24
Ritika 
Michal 
Zach
Nishanth

How to run the code :
DO a make in the root folder. It will make all the components of the system.

Below are the components of the system which need to be run simultaneously. Run in the following order:
0. Master server
$ ./master/master_server -t config.txt
Config file used: master/config.txt

1. Backend storage server
$ ./storage_server master/config.txt group_no server_no -v
Config file used: master/config.txt

2. Frontend server
$ ./fes server no
Config file used : config_fes.txt

3. Load balancer
$ ./lb
Config file used : config_fes.txt

4. Front end on the browser
localhost:7000

5. Admin server
config file used : config.txt
The format is the same as the backend server but the port no should be different. 
The port no needs to be calculated as (1200 * group_no) + server_no. This port number has to be added in the config file.
Admin server needs to be made separately. So, go to admin folder and type make. And then run it using the following command:
$ ./a`dmin

To run on the browser:
localhost:6007

(0) must be run first.
(1) can be run multiple times with different (group_no server_no) pairs, with the pairs as specified in the config file.
(2) can be run multiple times with different (no), as specified in the corresponding config file.
The front end servers will pause and wait for the load balancer to start.
(3) must be run once.
Now the front end servers must be manually started again. For each front end server press 'enter' to continue the program.
(4) must be entered into the browser. (5) can also be run now.
